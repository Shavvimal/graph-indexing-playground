
-Goal-
Given a text document that is potentially relevant to this activity and a list of entity types, identify all entities of those types from the text and all relationships among the identified entities.

-Steps-
1. Identify all entities. For each identified entity, extract the following information:
- entity_name: Name of the entity, capitalized
- entity_type: One of the following types: [organization, model, person, technology, event, publication, company, product, service, framework, community, agency, studio, cinema, platform, editor, tool, strategy, team, year]
- entity_description: Comprehensive description of the entity's attributes and activities
Format each entity as ("entity"{tuple_delimiter}<entity_name>{tuple_delimiter}<entity_type>{tuple_delimiter}<entity_description>)

2. From the entities identified in step 1, identify all pairs of (source_entity, target_entity) that are *clearly related* to each other.
For each pair of related entities, extract the following information:
- source_entity: name of the source entity, as identified in step 1
- target_entity: name of the target entity, as identified in step 1
- relationship_description: explanation as to why you think the source entity and the target entity are related to each other
- relationship_strength: an integer score between 1 to 10, indicating strength of the relationship between the source entity and target entity
Format each relationship as ("relationship"{tuple_delimiter}<source_entity>{tuple_delimiter}<target_entity>{tuple_delimiter}<relationship_description>{tuple_delimiter}<relationship_strength>)

3. Return output in The primary language of the provided text is **English**. as a single list of all the entities and relationships identified in steps 1 and 2. Use **{record_delimiter}** as the list delimiter.

4. If you have to translate into The primary language of the provided text is **English**., just translate the descriptions, nothing else!

5. When finished, output {completion_delimiter}.

-Examples-
######################

Example 1:

entity_types: [organization, model, person, technology, event, publication, company, product, service, framework, community, agency, studio, cinema, platform, editor, tool, strategy, team, year]
text:
# The European Commission’s assessment of how to define high-risk products relative to sectoral rules 
 Artificial intelligence (AI)-based cybersecurity and emergency services components in internet-connected devices are expected to be classified as high-risk in the context of the AI Act, according to a European Commission document seen by Euractiv.
------------------------
output:
Based on the provided text and entity records, I will identify the entities mentioned in the text and their corresponding types.

Here is the output:

* "European Commission" (organization)
* "Artificial intelligence" (technology)
* "AI Act" (publication or event, unclear from context)
* "Euractiv" (publication)

Note that some entity types may not be explicitly mentioned in the provided list of entity types. In such cases, I will make an educated guess based on the context.
#############################


Example 2:

entity_types: [organization, model, person, technology, event, publication, company, product, service, framework, community, agency, studio, cinema, platform, editor, tool, strategy, team, year]
text:
# RUST OR MOJO FOR THE FUTURE OF AI 
 This blog walks through the reimplementation of a thousand lines of C++ in an opencv function to a few lines of Mojo. They discuss the trade offs and speed ups. Mojo still doesn't have a local release, but it is expected to come soon.
------------------------
output:
Based on the provided data, I will identify entities in the given text document that match the entity types listed.

Here's the output:

("entity"{tuple_delimiter}MOJO{tuple_delimiter}TECHNOLOGY{tuple_delimiter}AI framework)
{record_delimiter}
("entity"{tuple_delimiter}OPENCV{tuple_delimiter}TECHNOLOGY{tuple_delimiter}Computer vision library)

Note: There are no entities of type organization, model, person, event, publication, company, product, service, framework, community, agency, studio, cinema, platform, editor, or tool in the provided text. The identified entities are of type TECHNOLOGY.
#############################


Example 3:

entity_types: [organization, model, person, technology, event, publication, company, product, service, framework, community, agency, studio, cinema, platform, editor, tool, strategy, team, year]
text:
.fit( model=lightning_model, train_dataloaders=train_loader, val_dataloaders=val_loader) # evaluate model trainer.test(lightning_model, dataloaders=test_loader) (Interested readers can find the complete code example here.) If you are curious about some real-world results, the code snippets above were used to train a movie review classifier using a pretrained DistilBERT base model (you can access the code notebooks here): 1) Feature-based approach with logistic regression: 83% test accuracy 2) Finetuning I, updating the last 2 layers: 87% accuracy 3) Finetuning II, updating all layers: 92% accuracy. These results are consistent with the general rule of thumb that finetuning more layers often results in better performance, but it comes with increased cost. Parameter-Efficient Finetuning Parameter-efficient finetuning allows us to reuse pretrained models while minimizing the computational and resource footprints. In sum, parameter
------------------------
output:
Based on the provided text document and entity list, I will identify and extract relevant entities and relationships.

**Extracted Entities:**

1. **Lightning Model**: TECHNOLOGY (model)
2. **DistilBERT Base Model**: TECHNOLOGY (pretrained model)

**Extracted Relationships:**

1. **Lightning Model** -> **Trainer**: The lightning model is being trained by the trainer.
2. **DistilBERT Base Model** -> **Finetuning I**: The DistilBERT base model is being finetuned, updating the last 2 layers.
3. **DistilBERT Base Model** -> **Finetuning II**: The DistilBERT base model is being finetuned, updating all layers.

Note that there are no entities or relationships related to the original list of entities (e.g., Quintara, Aurelia, Firuzabad, etc.) in this text document.
#############################


Example 4:

entity_types: [organization, model, person, technology, event, publication, company, product, service, framework, community, agency, studio, cinema, platform, editor, tool, strategy, team, year]
text:
285 and 315 new sites.
- In 2024, Chipotle is set to conduct an in-restaurant trial of the Autocado, a robot designed to scoop avocados, along with an automated make line for burrito bowls and salads.
------------------------
output:
Based on the provided data, I will extract relevant information and format it according to the specified goal.

Here is the output:

{record_delimiter}
("entity"{tuple_delimiter}CHIPOTLE{tuple_delimiter}ORGANIZATION{tuple_delimiter}Company conducting an in-restaurant trial of Autocado)
{record_delimiter}
("entity"{tuple_delimiter}AUTOCADO{tuple_delimiter}TECHNOLOGY{tuple_delimiter}Robot designed to scoop avocados)
{record_delimiter}

Note: Since the provided text does not contain any information related to Aurelians, hostages, or geographic locations mentioned in the goal, I only extracted entities related to the company and technology mentioned in the real data.
#############################


Example 5:

entity_types: [organization, model, person, technology, event, publication, company, product, service, framework, community, agency, studio, cinema, platform, editor, tool, strategy, team, year]
text:
# The Value-Packed Playbook To Unlock Your BFCM 
 For many e-commerce brands, BF/CM is the main event of the DTC year.

It’s your opportunity to drive awareness and engage new users as they ready their wallets for holiday shopping.

There’s a 20%+ revenue growth opportunity by leveraging AI in your BFCM strategy this year.

So check out this comprehensive playbook on how to crush your goals this holiday season using Black Crow AI. Get a head start today with a FREE trial.  Read the guide here.
------------------------
output:
Based on the provided text and entity list, I will identify the relevant entities and relationships mentioned in the text.

**Entities:**

* None of the entities from the provided list are mentioned in the text.

**Relationships:**

* None of the relationships from the provided list are mentioned in the text.

The text appears to be a marketing message promoting a playbook for e-commerce brands to succeed during the Black Friday and Cyber Monday (BFCM) shopping event. It mentions the potential revenue growth opportunity by leveraging AI in their BFCM strategy, but does not mention any specific entities or relationships from the provided list.
#############################



-Real Data-
######################
entity_types: [organization, model, person, technology, event, publication, company, product, service, framework, community, agency, studio, cinema, platform, editor, tool, strategy, team, year]
text: {input_text}
######################
output: